@Document(value = "product"): Bu anotasyon, Spring Data MongoDB ile uyumlu olduğunu belirtmek için kullanılır. value parametresi, belgeyi temsil eden MongoDB koleksiyonunun adını belirtir. Bu durumda, "product" adında bir koleksiyonla ilişkilendirilir.
@AllArgsConstructor: Bu anotasyon, tüm alanlar için bir parametreli yapıcı metodun otomatik olarak oluşturulmasını sağlar. Bu, sınıfın tüm alanlarını kullanarak bir nesne oluşturmak için tek bir yapıcı metodun oluşturulmasını sağlar.
@NoArgsConstructor: Bu anotasyon, hiçbir parametre almayan bir yapıcı metodun otomatik olarak oluşturulmasını sağlar. Bu, sınıfın bir varsayılan yapıcı metodu olduğunu belirtir.
@Builder: Bu anotasyon, Lombok kütüphanesinden gelen bir özelliktir. Lombok, nesne oluşturma sürecini kolaylaştıran ve okunabilirliği artıran özel bir yapı olan Builder tasarım desenini destekler. @Builder anotasyonu, bir sınıf için bir Builder sınıfının otomatik olarak oluşturulmasını sağlar. Bu Builder sınıfı, nesne oluşturmayı kolaylaştırır ve okunabilir bir yapı sağlar.
@Data: Bu anotasyon, Lombok tarafından sağlanan bir anotasyondur. Bu anotasyon, sınıf için standart getter, setter, toString, equals ve hashCode metotlarını otomatik olarak oluşturur. Bu, sınıfın temel işlemlerini kolaylaştırır ve kod tekrarını azaltır.
@RequiredArgsConstructor anotasyonu, Lombok kütüphanesinden gelen bir anotasyondur ve final olarak işaretlenen alanlar için parametreli bir yapıcı metodun otomatik olarak oluşturulmasını sağlar. Bu anotasyon, sınıfın final alanlarına bağımlılıkları enjekte etmek için kullanışlıdır.
@Slf4j Lombok kütüphanesinden gelen bir anotasyondur ve Java sınıflarında loglama için kolaylık sağlar. Bu anotasyon, geliştiricilerin Logger nesnesini otomatik olarak oluşturmak için gereken kodu yazmaktan kaçınmalarını sağlar.
Bu anotasyonu kullanarak, sınıfın herhangi bir yerinde log adında bir Logger nesnesi oluşturulur. Bu nesne, log mesajlarını kaydetmek için kullanılır.
Yukarıdaki örnekte, @Slf4j anotasyonu, MyClass sınıfı için bir Logger nesnesi oluşturur. Bu nesne, log adı altında kullanılabilir hale gelir. log nesnesi, info, debug, warn, error gibi log seviyelerine sahip metotları sağlar. Bu metotlar, ilgili log seviyesinde log mesajlarını kaydetmek için kullanılabilir.

