spring.application.name=eureka-server
server.port=8761
eureka.client.fetch-registry=false
eureka.client.register-with-eureka=false

#Eureka server isteklerin çok fazla oldugu sistemlerde kullanilabilir.
#ileride bu eureka yi kaldiricaz bunu aslinda kubernates kendisi de yapiyor farkli araçlarda mevcut.
#eureka server ile bu ornek icin inventory-service i cokladik ve loadblancing yapisi kurduk.
#iventory-service farkli portlardan farkli instanslardan erisilebilir oldu.
#yogunluga gore diger instanslarina yonlendirme yapti eureka server.
#sabit bir port vermedik inventory-service diye yazdik clientimizin request urli kismina

#eureka server cokerse ne olur?
#eureka server ile haberlesen servisler ustlerinde cache olarak saklarlar bir sure daha idare edebilirler son baglanti
#uzerinden o sirada eureka serveri yeniden baslatacak veya yedekleyecek mekanizmalar kurulabilir.
#ancak istek yapan servislerden birisi down olursa yeniden basladiginda cahce kaybolur eureka uzerinden yeniden
#adresleri cekmesi gerekir bu sebeple eureka server uzun sure down sekilde kalirsa buyuk sikintilar ortaya cikabilir.

#eureka server her 30 saniye bir registeriy leri tarar kalp atisi denir buna yasiyorlar mi diye kontrol eder surekli
#bu saniye varsayilan suredir su ayar ile degisitirebilir.
#eureka.client.registry-fetch-interval-seconds
