server.port=8081
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/order-service
spring.datasource.username=root
spring.datasource.password=mypass1
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true


#ddl-auto ayari, asagidaki degerlerden birini alabilir:

#create: Her baslangicta var olan tablolari silerek ve sema olusturarak yeni bir veritabani olusturur.
#create-drop: Her baslangicta var olan tablolari silerek ve sema olusturarak yeni bir veritabani olusturur. Uygulama sonlandiginda tablolari kaldirir.
#update: Tablo yapilarini otomatik olarak olusturur ve mevcut tablolari günceller. Veritabanindaki verileri korur.
#validate: Var olan tablolarin yapisini dogrular. Tablo eksiklikleri veya degisikleri tespit eder, ancak degisiklik yapmaz.
#none: Hibernate'in tablolari olusturma veya güncelleme islemi yapmamasini saglar. Tablolarin manuel olarak olusturulmasi veya güncellenmesi gerekmektedir.


##-e (enviroment) ile veritabani baglanacagamiz kullanici adi sifre gibi environment lari yazariz
##-d (detach) arka planda çalismasini sagladik komut satirini etmedik
##-p (port-publish ) mysql çalisacak portu belirttik. Daha dogrusu tarayicimzdan baglanabilecegimiz portu belirledik.
##-- name ile de containerimizin adini tanimladik
##-v volume ler yani stateless-geçici olmasin docker stop dediginde içindeki veriler silinmesin bir yerde tutulsun bu veriler
## pull sirasinda / ile çekiyorsan orasi offical degildir.
## --link baska bir containera baglan :db ise veritabanlari için kullanilan alias tir localhost gibi düsün bunu gerçek hayatta

#docker pull mysql
#docker pull phpmyadmin/phpmyadmin
#docker run --name mysql-server -p 3306:3306 -v /opt/data:/etc/mysql/conf.f -e MYSQL_ROOT_PASSWORD=mypass1 -d mysql
#docker run --name pmyadmin -p 8000:80 --link mysql-server:db -d phpmyadmin/phpmyadmin
#tarayiciya girip localhost:8080 yazdiginda phpmyadmin ekrani gelicek.
#aslinda dbeaver tarzi bir uygulaman varsa oradan da görüntüleyebilirsin phpmyadmin kurmadan ama ben onu da docker dan kullanicam dersen faydali olabilir.